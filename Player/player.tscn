[gd_scene load_steps=4 format=3 uid="uid://pjwsorepbum0"]

[sub_resource type="GDScript" id="GDScript_nbx6h"]
script/source = "extends CharacterBody3D


@export var speed = 5.0
@export var jump_vel = 4.5
@export var lerp_val = 20
@export var mouse_sense = 0.15

@onready var pivot = $Pivot
@onready var camera_3d = $Camera3D

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")

func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	
func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	# Handle Jump.
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		velocity.y = jump_vel

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"leftward\", \"rightward\", \"forward\", \"backward\")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * speed
		velocity.z = direction.z * speed
	else:
		velocity.x = move_toward(velocity.x, 0, speed)
		velocity.z = move_toward(velocity.z, 0, speed)
	
	if direction != Vector3.ZERO:
		direction = direction.normalized()
		pivot.rotation.y = lerp_angle(pivot.rotation.y, atan2(-velocity.x, -velocity.z), delta * lerp_val)

	move_and_slide()

func _input(event):
	if event is InputEventMouseMotion:
		rotate_y(deg_to_rad(-event.relative.x * mouse_sense))
		camera_3d.rotate_x(deg_to_rad(-event.relative.y * mouse_sense))
"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_i8irb"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_xpt0j"]

[node name="Player" type="CharacterBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
script = SubResource("GDScript_nbx6h")

[node name="Pivot" type="Node3D" parent="."]

[node name="MeshInstance3D" type="MeshInstance3D" parent="Pivot"]
mesh = SubResource("CapsuleMesh_i8irb")
skeleton = NodePath("../..")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_xpt0j")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.910749, 0.412961, 0, -0.412961, 0.910749, 0, 1.78719, 4.41682)
