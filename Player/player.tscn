[gd_scene load_steps=4 format=3 uid="uid://pjwsorepbum0"]

[sub_resource type="GDScript" id="GDScript_nbx6h"]
script/source = "extends CharacterBody3D


@export var speed := 5.0
@export var jump_vel := 4.5
@export var lerp_val := 0.2
@export var mouse_sense := 0.15

var direction = Vector3.ZERO

@onready var pivot = $Pivot
@onready var camera_3d = $Camera3D

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")

func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	
func _physics_process(delta):
	apply_gravity(delta)
	move()

func _input(event):
	if event is InputEventMouseMotion:
		rotate_y(deg_to_rad(-event.relative.x * mouse_sense))
		camera_3d.rotate_x(deg_to_rad(-event.relative.y * mouse_sense))
		camera_3d.rotation.x = clamp(camera_3d.rotation.x, deg_to_rad(-89), deg_to_rad(89))

func apply_gravity(delta):
	if not is_on_floor():
		velocity.y -= gravity * delta

func jump():
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		velocity.y = jump_vel

func move():
	jump()
	var y_rot = global_transform.basis.get_euler().y
	direction.x = Input.get_action_strength(\"rightward\") - Input.get_action_strength(\"leftward\")
	direction.z = Input.get_action_strength(\"backward\") - Input.get_action_strength(\"forward\")
	direction = direction.rotated(Vector3.UP, y_rot).normalized()
	if direction:
		velocity.x = direction.x * speed
		velocity.z = direction.z * speed
	else:
		velocity.x = lerp(velocity.x, 0.0, lerp_val)
		velocity.z = lerp(velocity.z, 0.0, lerp_val)
	pivot.rotation.y = lerp_angle(pivot.rotation.y, atan2(-velocity.x, -velocity.z), lerp_val)
	move_and_slide()
	
"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_i8irb"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_xpt0j"]

[node name="Player" type="CharacterBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
script = SubResource("GDScript_nbx6h")

[node name="Pivot" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0)

[node name="Body" type="MeshInstance3D" parent="Pivot"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
mesh = SubResource("CapsuleMesh_i8irb")
skeleton = NodePath("../..")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_xpt0j")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 0)
